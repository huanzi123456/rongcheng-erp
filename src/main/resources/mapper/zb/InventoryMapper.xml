<?xml version="1.0" encoding="UTF-8" ?>  

<!DOCTYPE mapper 
 PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
  "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">



<mapper namespace="com.rongcheng.erp.dao.ZB_InventoryDAO">

	<!-- /**
     * 查询库存状态
     * 
     * <p>根据关键字
     * 
     * @param start 开始位置
     * @param row 查询几条
     * @param ownerId 主账号ID
     * @param keywords 关键字
     * @param warehouseInfoId 仓库ID
     * @return list 结果集合
     * @author 赵滨
     */ -->
    <select id="listItemCommonStockByKeywords"  resultType="java.util.Map">
        select 
            <!-- 商品ID -->
            i.id,
            <!-- 商品编码 -->
            ifnull(i.erp_item_num, '') as erpItemNum,
            <!-- 商品名称 -->
            ifnull(i.name, '') as name,
            <!-- 商品条码 -->
            ifnull(i.bar_code, '') as barCode,
            <!-- 商品颜色 -->
            ifnull(i.color, '') as color,
            <!-- 商品尺码 -->
            ifnull(i.size, '') as size,
            <!-- 商品包装（是否破损，包装完整等） -->
            ifnull(i.package_condition, '') as packageCondition,
            <!-- 库存总量 -->
            ifnull(s.stock_quantity,0) as sumQuantity,
            <!-- 订单占用量 -->
            ifnull(
            (
                select 
                    sum(l.quantity)
                from 
                    order_item_link as l ,
                    item_common_info as it,
                    order_info as o
                where 
                    it.id = l.order_item_id
                and 
                    l.erp_order_id = o.id
                and 
                    l.order_item_id = i.id
                and 
                    o.order_status in (2, 3, 4, 5, 6)
                and 
                    l.owner_id = #{2}
                and 
                    it.owner_id = #{2}
                and 
                    o.owner_id = #{2}
            ), 0) as useQuantity,
            <!-- 30天销量 -->
            ifnull(
            (
                select 
                    SUM(l.quantity)
                from 
                    order_item_link as l ,
                    item_common_info as it,
                    order_info as o
                where 
                    it.id = l.order_item_id
                and 
                    l.erp_order_id = o.id
                and 
                    l.order_item_id = i.id
                and 
                    o.order_status in (2, 3, 4, 5, 6, 7, 8, 9, 10)
                and 
                    (date_sub(curdate(), interval 30 day) &lt;= date(o.gmt_create))
                and 
                    l.owner_id = #{2}
                and 
                    it.owner_id = #{2}
                and 
                    o.owner_id = #{2}
            ), 0) as salesQuantity,
            <!-- 警戒量 -->
            ifnull(s.alert_stock, 0) as alertStock
        from 
            location_item_stock as s  
        LEFT join
            item_common_info as i
        on
            s.item_id = i.id
        left join 
            stocklocation_info as t
        on 
            s.stocklocation_id = t.id
        <where>
            <!-- s.owner_id = #{2}
        and  -->
            i.owner_id = #{2}
        <if test="param4 != '' and param4 != null"> 
        and 
            (
            i.erp_item_num like concat('%', #{3}, '%')
        or 
            i.name like concat('%', #{3}, '%')
        or 
            i.bar_code like concat('%', #{3}, '%')
            )
        </if>
        <if test="param5 != '' and param5 != null">
        and
            t.warehouse_id = #{4}
        </if>
        </where>
        limit 
            #{0}, #{1}
    </select>
    
    <!-- /**
     * 查询库存状态 条数
     * 
     * <p>根据关键字
     * 
     * @param ownerId 主账号ID
     * @param keywords 关键字
     * @param warehouseInfoId 仓库ID
     * @return list 结果集合
     * @author 赵滨
     */ -->
    <select id="countItemCommonStockByKeywords"  resultType="int">
        select 
            <!-- 库存状态条数 -->
            count(i.id)
        from 
            location_item_stock as s  
        LEFT join
            item_common_info as i
        on
            s.item_id = i.id
        left join 
            stocklocation_info as t
        on 
            s.stocklocation_id = t.id
        <where>
            <!-- s.owner_id = #{0}
        and  -->
            i.owner_id = #{0}
        <if test="param2 != '' and param2 != null"> 
        and 
            (
            i.erp_item_num like concat('%', #{1}, '%')
        or 
            i.name like concat('%', #{1}, '%')
        or 
            i.bar_code like concat('%', #{1}, '%')
            )
        </if> 
        <if test="param3 != '' and param3 != null">
        and
            t.warehouse_id = #{2}
        </if> 
        </where>
    </select>

    <!-- /**
     * 查询库存状态
     * 
     * <p>低于警戒线
     * 
     * @param start 开始位置
     * @param row 查询几条
     * @param ownerId 主账号ID
     * @param warehouseInfoId 仓库ID
     * @return list 结果集合
     * @author 赵滨
     */ -->
    <select id="listItemCommonStockByAlertStock"  resultType="java.util.Map">
        select 
            *
        from (
            select
                *,
                (sumQuantity-useQuantity) as availableQuantity
            from(
                select 
		            <!-- 商品ID -->
		            i.id,
		            <!-- 商品编码 -->
		            ifnull(i.erp_item_num, '') as erpItemNum,
		            <!-- 商品名称 -->
		            ifnull(i.name, '') as name,
		            <!-- 商品条码 -->
		            ifnull(i.bar_code, '') as barCode,
		            <!-- 商品颜色 -->
		            ifnull(i.color, '') as color,
		            <!-- 商品尺码 -->
		            ifnull(i.size, '') as size,
		            <!-- 商品包装（是否破损，包装完整等） -->
		            ifnull(i.package_condition, '') as packageCondition,
		            <!-- 库存总量 -->
		            ifnull(s.stock_quantity,0) as sumQuantity,
		            <!-- 订单占用量 -->
		            ifnull(
		            (
		                select 
		                    sum(l.quantity)
		                from 
		                    order_item_link as l ,
		                    item_common_info as it,
		                    order_info as o
		                where 
		                    it.id = l.order_item_id
		                and 
		                    l.erp_order_id = o.id
		                and 
		                    l.order_item_id = i.id
		                and 
		                    o.order_status in (2, 3, 4, 5, 6)
		                and 
		                    l.owner_id = #{2}
		                and 
		                    it.owner_id = #{2}
		                and 
		                    o.owner_id = #{2}
		            ), 0) as useQuantity,
		            <!-- 30天销量 -->
		            ifnull(
		            (
		                select 
		                    SUM(l.quantity)
		                from 
		                    order_item_link as l ,
		                    item_common_info as it,
		                    order_info as o
		                where 
		                    it.id = l.order_item_id
		                and 
		                    l.erp_order_id = o.id
		                and 
		                    l.order_item_id = i.id
		                and 
		                    o.order_status in (2, 3, 4, 5, 6, 7, 8, 9, 10)
		                and 
		                    (date_sub(curdate(), interval 30 day) &lt;= date(o.gmt_create))
		                and 
		                    l.owner_id = #{2}
		                and 
		                    it.owner_id = #{2}
		                and 
		                    o.owner_id = #{2}
		            ), 0) as salesQuantity,
		            <!-- 警戒量 -->
		            ifnull(s.alert_stock, 0) as alertStock
		        from 
		            location_item_stock as s  
		        LEFT join
		            item_common_info as i
		        on
		            s.item_id = i.id
		        left join 
                    stocklocation_info as t
                on 
                    s.stocklocation_id = t.id
		        <where>
		           <!--  s.owner_id = #{2}
		        and  -->
		            i.owner_id = #{2}
		        <if test="param4 != '' and param4 != null">
		        and
		            t.warehouse_id = #{3}
		        </if> 
		        </where>
            ) as innerLayer
        ) as outerLayer
        where
            availableQuantity &lt; alertStock
        limit 
            #{0}, #{1}
    </select>

    <!-- /**
     * 查询库存状态 条数
     * 
     * <p>低于警戒线
     * 
     * @param ownerId 主账号ID
     * @param warehouseInfoId 仓库ID
     * @return list 结果集合
     * @author 赵滨
     */ -->
    <select id="countItemCommonStockByAlertStock"  resultType="int">
        select
            count(*)
        from (
            select
                *,
                (sumQuantity-useQuantity) as availableQuantity
            from(
                select
                    <!-- 库存总量 -->
                    ifnull(s.stock_quantity,0) as sumQuantity,
                    <!-- 订单占用量 -->
                    ifnull(
                    (
                        select
                            sum(l.quantity)
                        from
                            order_item_link as l ,
                            item_common_info as it,
                            order_info as o
                        where
                            it.id = l.order_item_id
                        and
                            l.erp_order_id = o.id
                        and
                            l.order_item_id = i.id
                        and
                            o.order_status in (2, 3, 4, 5, 6)
                        and
                            l.owner_id = #{0}
                        and
                            it.owner_id = #{0}
                        and
                            o.owner_id = #{0}
                    ), 0) as useQuantity,
                    <!-- 警戒量 -->
                    ifnull(s.alert_stock, 0) as alertStock
                from
                    location_item_stock as s
                LEFT join
                    item_common_info as i
                on
                    s.item_id = i.id
                left join
                    stocklocation_info as t
                on
                    s.stocklocation_id = t.id
                <where>
                    <!-- s.owner_id = #{0}
                and  -->
                    i.owner_id = #{0}
                <if test="param2 != '' and param2 != null">
		        and
		            t.warehouse_id = #{1}
		        </if>
                </where>
            ) as innerLayer
        ) as outerLayer
        where
            availableQuantity &lt; alertStock
    </select>
    
    <!-- /**
     * 查询 库存所在的仓库 列表
     * 
     * <p>仓库的名称和ID
     * 
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->
    <select id="listStockOfWarehouse" 
            resultType="java.util.Map">
		select
		    id,
		    user_warehouse_code as userWarehouseCode,
		    warehouse_name as warehouseName,
		    consignor_name as consignorName,
		    consignor_tel as consignorTel,
		    consignor_mobile as consignorMobile,
		    region_id as regionId,
		    user_address as userAddress,
		    warehouse_status as warehouseStatus,
		    connection_code as connectionCode,
		    note,
		    owner_id as ownerId,
		    operator_id as operatorId,
		    is_authorized as authorized,
		    gmt_create as gmtCreate,
		    gmt_modified as gmtModified
		from
		    warehouse_info
		    
		where
		    owner_id = #{0}
    </select>
    
    <!-- /**
     * 查询 库存信息表
     * 
     * <p>根据商品ID 关联查询
     * 
     * @param itemCommonId 商品ID
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->    
     <select id="getLocationItemStockByItemCommonId" 
            resultType="com.rongcheng.erp.entity.LocationItemStock">
        select
		    id,
		    warehouse_id as warehouseId,
		    stocklocation_id as stocklocationId,
		    item_id as itemId,
		    stock_quantity as stockQuantity,
		    alert_stock as alertStock,
		    sendout_status as sendoutStatus,
        	bind_id as bindId,
		    reserved1,
		    note,
		    owner_id as ownerId,
		    operator_id as operatorId,
		    is_authorization as authorization,
		    gmt_create as gmtCreate,
		    gmt_modified as gmtModified

	   from 
	   
	       location_item_stock 
	       
	   where 
	   
	       owner_id = #{1}
	       
	   and 
	   
	       item_id = #{0}
    </select>
    
    <!-- /**
     * 查询 库存信息表
     * 
     * <p>根据商品ID 
     * 
     * @param itemCommonId 商品ID
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->    
     <select id="getLocationItemStockByItemlocationId" 
            resultType="com.rongcheng.erp.entity.LocationItemStock">
        select
            id,
            warehouse_id as warehouseId,
            stocklocation_id as stocklocationId,
            item_id as itemId,
            stock_quantity as stockQuantity,
            alert_stock as alertStock,
            sendout_status as sendoutStatus,
        	bind_id as bindId,
            reserved1,
            note,
            owner_id as ownerId,
            operator_id as operatorId,
            is_authorization as authorization,
            gmt_create as gmtCreate,
            gmt_modified as gmtModified
           
       from 
           location_item_stock 
       where 
           owner_id = #{1}
       and 
           item_id = #{0}
       and
           stocklocation_id = #{2}
    </select>
    
    <!-- /**
     * 保存 库存信息表
     * 
     * <p>传入库存信息表对象，MyBatis使用对象保存栏目表。
     * 
     * @param locationItemStock 库存信息表
     * @return
     * @author 赵滨
     */ -->
    <insert id="saveLocationItemStock" parameterType="com.rongcheng.erp.entity.LocationItemStock">
        insert into location_item_stock (
	        id,
	        warehouse_id,
		    stocklocation_id,
		    item_id,
		    stock_quantity,
		    alert_stock,
		    sendout_status,
		    reserved1,
		    note,
		    owner_id,
		    operator_id,
		    is_authorization,
		    gmt_create,
		    gmt_modified)
		values(
	        #{id},
	        #{warehouseId},
		    #{stocklocationId},
		    #{itemId},
		    #{stockQuantity},
		    #{alertStock},
		    #{sendoutStatus},
		    #{reserved1},
		    #{note},
		    #{ownerId},
		    #{operatorId},
		    #{authorization},
		    #{gmtCreate},
		    #{gmtModified})
    </insert>
    
    <!-- /**
     * 修改 库存信息表
     * 
     * <p>传入库存信息表对象修改栏目内容
     * 
     * @param locationItemStock 库存信息表
     * @return
     * @author 赵滨
     */ -->
    <update id="modifyLocationItemStock" 
            parameterType="com.rongcheng.erp.entity.LocationItemStock">
        update
		    location_item_stock
		set
		    <!-- id = #{id}, -->
		    warehouse_id = #{warehouseId},
		    stocklocation_id = #{stocklocationId},
		    item_id = #{itemId},
		    stock_quantity = #{stockQuantity},
		    alert_stock = #{alertStock},
		    sendout_status = #{sendoutStatus},
		    reserved1 = #{reserved1},
		    note = #{note},
		    <!-- owner_id = #{ownerId}, -->
		    operator_id = #{operatorId},
		    is_authorization = #{authorization},
		    <!-- gmt_create = #{gmtCreate}, -->
		    gmt_modified=#{gmtModified}
		where
		    id = #{id}
		and 
	        owner_id=#{ownerId} 
    </update>
    
    <!-- /**
     * 移除 库存信息表
     * 
     * <p>根据商品ID 关联查询
     * 
     * @param itemCommonId 商品ID
     * @param ownerId 主账号ID
     * @param locationId 库位ID
     * @return
     * @author 赵滨
     */ -->
    <delete id="removeLocationItemStockByItemCommonId">
        delete from 
            location_item_stock
        where 
            item_id=#{0}
        and
            owner_id=#{1} 
        and 
            stocklocation_id=#{2}
    </delete>
    
    <!-- /**
     * 移除 库存信息表
     * 
     * <p>根据商品ID 关联查询
     * 
     * @param ownerId 主账号ID
     * @param locationId 库位ID
     * @return
     * @author 赵滨
     */ -->
    <delete id="removeLocationItemStockByLocationId">
        delete from 
            location_item_stock
        where 
            owner_id=#{0} 
        and 
            stocklocation_id=#{1}
    </delete>
    
    <!-- /**
     * 查询 库存相关统计
     * @param ownerId 主账号ID
     * @param warehouseInfoId 仓库ID
     * @return
     * @author 赵滨
     */ -->
    <select id="getItemCommonStockByWarehouseInfoId" resultType="java.util.Map">
        select 
            sum(ifnull(s.stock_quantity,0)) as sumQuantity,
            sum(ifnull(
            (
                select 
                    sum(l.quantity)
                from 
                    order_item_link as l ,
                    item_common_info as it,
                    order_info as o
                where 
                    it.id = l.order_item_id
                and 
                    l.erp_order_id = o.id
                and 
                    l.order_item_id = i.id
                and 
                    o.order_status in (2, 3, 4, 5, 6)
                and 
                    l.owner_id = #{0}
                and 
                    it.owner_id = #{0}
                and 
                    o.owner_id = #{0}
            ), 0)) as useQuantity
        from 
           location_item_stock as s  
        LEFT join
           item_common_info as i
        on
           s.item_id = i.id
        left join 
           stocklocation_info as t
        on 
           s.stocklocation_id = t.id
        <where>
           <!-- s.owner_id = #{0}
        and  -->
           i.owner_id = #{0}
        <if test="param2 != '' and param2 != null">
            and
                t.warehouse_id = #{1}
        </if>
        </where>
    </select>
    
    <!-- /**
     * 查询 商品库存库位
     * 
     * <p>根据关键字
     * 
     * @param start 开始位置
     * @param row 查询几条
     * @param ownerId 主账号ID
     * @param keywords 关键字
     * @param warehouseInfoId 仓库ID
     * @return list 结果集合
     * @author 赵滨
     */ -->
    <select id="listItemCommonStocklocationByKeywords"  resultType="java.util.Map">
        select 
            <!-- 商品ID -->
            i.id,
            <!-- 商品编码 -->
            ifnull(i.erp_item_num, '') as erpItemNum,
            <!-- 商品名称 -->
            ifnull(i.name, '') as name,
            <!-- 商品条码 -->
            ifnull(i.bar_code, '') as barCode,
            <!-- 商品颜色 -->
            ifnull(i.color, '') as color,
            <!-- 商品尺码 -->
            ifnull(i.size, '') as size,
            <!-- 商品包装（是否破损，包装完整等） -->
            ifnull(i.package_condition, '') as packageCondition,
            <!-- 库位名称 -->
            ifnull(t.name, '') as locationName,
            <!-- 库存总量 -->
            ifnull(s.stock_quantity,0) as sumQuantity,
            <!-- 订单占用量 -->
            ifnull(
            (
                select 
                    sum(l.quantity)
                from 
                    order_item_link as l ,
                    item_common_info as it,
                    order_info as o
                where 
                    it.id = l.order_item_id
                and 
                    l.erp_order_id = o.id
                and 
                    l.order_item_id = i.id
                and 
                    o.order_status in (2, 3, 4, 5, 6)
                and 
                    l.owner_id = #{2}
                and 
                    it.owner_id = #{2}
                and 
                    o.owner_id = #{2}
            ), 0) as useQuantity
        from 
            location_item_stock as s  
        LEFT join
            item_common_info as i
        on
            s.item_id = i.id
        left join 
            stocklocation_info as t
        on 
            s.stocklocation_id = t.id
        <where>
            <!-- s.owner_id = #{2}
        and  -->
            i.owner_id = #{2}
        <if test="param4 != '' and param4 != null"> 
        and 
            (
            i.erp_item_num like concat('%', #{3}, '%')
        or 
            i.name like concat('%', #{3}, '%')
        or 
            i.bar_code like concat('%', #{3}, '%')
        or
            t.name like concat('%', #{3}, '%')
            )
        </if>
        <if test="param5 != '' and param5 != null">
        and
            t.warehouse_id = #{4}
        </if> 
        </where>
        limit 
            #{0}, #{1}
    </select>
    
    <!-- /**
     * 查询 商品库存库位 条数
     * 
     * <p>根据关键字
     * 
     * @param ownerId 主账号ID
     * @param keywords 关键字
     * @param warehouseInfoId 仓库ID
     * @return list 结果集合
     * @author 赵滨
     */ -->
    <select id="countItemCommonStocklocationByKeywords"  resultType="int">
        select 
            <!-- 库存状态条数 -->
            count(i.id)
        from 
            location_item_stock as s  
        LEFT join
            item_common_info as i
        on
            s.item_id = i.id
        left join 
            stocklocation_info as t
        on 
            s.stocklocation_id = t.id
        <where>
            <!-- s.owner_id = #{0}
        and  -->
            i.owner_id = #{0}
        <if test="param2 != '' and param2 != null"> 
        and 
            (
            i.erp_item_num like concat('%', #{1}, '%')
        or 
            i.name like concat('%', #{1}, '%')
        or 
            i.bar_code like concat('%', #{1}, '%')
        or
            t.name like concat('%', #{1}, '%')
            )
        </if> 
        <if test="param3 != '' and param3 != null">
        and
            t.warehouse_id = #{2}
        </if> 
        </where>
    </select>
    
    <!-- /**
     * 查询 仓库列表
     * 
     * <p>根据 关键字
     * 
     * @param ownerId 主账号ID
     * @param warehouseStatus 该仓库是否被启用
     * @param keywords 关键字
     * @param defaultAll 是否默认全部选择
     * @return
     * @author 赵滨
     */ -->
    <select id="listWarehouseInfoByKeywords" resultType="com.rongcheng.erp.entity.WarehouseInfo">
        select
		    id,
		    user_warehouse_code as userWarehouseCode,
		    warehouse_name as warehouseName,
		    consignor_name as consignorName,
		    consignor_tel as consignorTel,
		    consignor_mobile as consignorMobile,
		    region_id as regionId,
		    user_address as userAddress,
		    warehouse_status as warehouseStatus,
		    connection_code as connectionCode,
		    note,
		    owner_id as ownerId,
		    operator_id as operatorId,
		    is_authorized as authorized,
		    gmt_create as gmtCreate,
		    gmt_modified as gmtModified
		from
		    warehouse_info
		<where>
            owner_id = #{0}
	        <if test="param3 != '' and param3 != null"> 
	        and 
	            (
	            user_warehouse_code like concat('%', #{2}, '%')
	        or 
	            warehouse_name like concat('%', #{2}, '%')
	            )
	        </if>
	        
	        <if test="param4 == false">
	        and
	            warehouse_status = #{1}
	        </if>
	        
	        <if test="param4 == true ">
	        
	        </if> 
        
        </where> 
        limit 
            #{4}, #{5}
    </select>
    
    <!-- /**
     * 查询 仓库列表 条数
     * 
     * <p>根据 关键字
     * 
     * @param ownerId 主账号ID
     * @param warehouseStatus 该仓库是否被启用
     * @param keywords 关键字
     * @param defaultAll 是否默认全部选择
     * @return
     * @author 赵滨
     */ -->
    <select id="countWarehouseInfoByKeywords" resultType="int">
        select
            count(id)
        from
            warehouse_info
        <where>
            owner_id = #{0}
            <if test="param3 != '' and param3 != null"> 
            and 
                (
                user_warehouse_code like concat('%', #{2}, '%')
            or 
                warehouse_name like concat('%', #{2}, '%')
                )
            </if>
            
            <if test="param4 == false">
            and
                warehouse_status = #{1}
            </if>
            
            <if test="param4 == true ">
            
            </if> 
        
        </where> 
    </select>
    
    <!-- /**
     * 保存 仓库列表
     * 
     * <p>传入对象，MyBatis使用对象保存。
     * 
     * @param warehouseInfo 仓库列表
     * @return
     * @author 赵滨
     */ -->
    <insert id="saveWarehouseInfo"
            parameterType="com.rongcheng.erp.entity.WarehouseInfo">
        insert into warehouse_info(
		    id,
		    user_warehouse_code,
		    warehouse_name,
		    consignor_name,
		    consignor_tel,
		    consignor_mobile,
		    region_id,
		    user_address,
		    warehouse_status,
		    connection_code,
		    note,
		    owner_id,
		    operator_id,
		    is_authorized,
		    gmt_create,
		    gmt_modified)
		values(
		    #{id},
		    #{userWarehouseCode},
		    #{warehouseName},
		    #{consignorName},
		    #{consignorTel},
		    #{consignorMobile},
		    #{regionId},
		    #{userAddress},
		    #{warehouseStatus},
		    #{connectionCode},
		    #{note},
		    #{ownerId},
		    #{operatorId},
		    #{authorized},
		    #{gmtCreate},
		    #{gmtModified})
    </insert>
    
    <!-- /**
     * 修改 仓库列表
     * 
     * <p>传入对象修改内容
     * 
     * @param warehouseInfo 仓库列表
     * @return
     * @author 赵滨
     */ -->
     <update id="modifyWarehouseInfo"
            parameterType="com.rongcheng.erp.entity.WarehouseInfo">
        update
	        warehouse_info
		set
		    <!-- id = #{id}, -->
		    user_warehouse_code = #{userWarehouseCode},
		    warehouse_name = #{warehouseName},
		    consignor_name = #{consignorName},
		    consignor_tel = #{consignorTel},
		    consignor_mobile = #{consignorMobile},
		    region_id = #{regionId},
		    user_address = #{userAddress},
		    warehouse_status = #{warehouseStatus},
		    connection_code = #{connectionCode},
		    note = #{note},
		    <!-- owner_id = #{ownerId}, -->
		    operator_id = #{operatorId},
		    is_authorized = #{authorized},
		    <!-- gmt_create = #{gmtCreate}, -->
		    gmt_modified = #{gmtModified}
		where
		    id = #{id}
        and 
            owner_id=#{ownerId} 
    </update> 
    
    <!-- /**
     * 获取 仓库列表
     * 
     * <p>根据ID
     * 
     * @param id
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */
    WarehouseInfo (BigInteger id, BigInteger ownerId); -->
    <select id="getWarehouseInfoById" resultType="com.rongcheng.erp.entity.WarehouseInfo">
        select
		    id,
		    user_warehouse_code as userWarehouseCode,
		    warehouse_name as warehouseName,
		    consignor_name as consignorName,
		    consignor_tel as consignorTel,
		    consignor_mobile as consignorMobile,
		    region_id as regionId,
		    user_address as userAddress,
		    warehouse_status as warehouseStatus,
		    connection_code as connectionCode,
		    note,
		    owner_id as ownerId,
		    operator_id as operatorId,
		    is_authorized as authorized,
		    gmt_create as gmtCreate,
		    gmt_modified as gmtModified
		from
		    warehouse_info
		where
		    id = #{0}
		and
		    owner_id = #{1}
    </select>
    
    <!-- /**
     * 获取 库位列表
     * 
     * <p>根据 库位编码
     * 
     * @param userStocklocationCode库位编码
     * @param ownerId 主账号ID
     * @param start 开始
     * @param row 行数
     * @return
     * @author 赵滨
     */ -->
    <select id="listStocklocationInfoByCode" resultType="com.rongcheng.erp.entity.StocklocationInfo">
        
        select
		    id,
		    warehouse_id as warehouseId,
		    user_stocklocation_code as userStocklocationCode,
		    name,
		    stocklocation_status as stocklocationStatus,
		    connection_code as connectionCode,
		    distribution_region as distributionRegion,
		    note,
		    owner_id as ownerId,
		    operator_id as operatorId,
		    is_authorized as authorized,
		    gmt_create as gmtCreate,
		    gmt_modified as gmtModified
		from
		    stocklocation_info
		<where>
		    owner_id = #{1}
		    <if test="param1 != '' and param1 != null">
                and 
		            (
		            user_stocklocation_code like concat('%', #{0}, '%')
		        or 
		            name like concat('%', #{0}, '%')
		            )
            </if>
		</where>
		limit
		    #{2}, #{3}
        
    </select>
    
    <!-- /**
     * 获取 库位列表 条数
     * 
     * <p>根据 库位编码
     * 
     * @param userStocklocationCode库位编码
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->
    <select id="countStocklocationInfoByCode" resultType="int">
        
        select
            count(id)
        from
            stocklocation_info
        <where>
            owner_id = #{1}
            <if test="param1 != '' and param1 != null">
                and 
                    (
                    user_stocklocation_code like concat('%', #{0}, '%')
                or 
                    name like concat('%', #{0}, '%')
                    )
            </if>
        </where>
        
    </select>
    
    <!-- /**
     * 获取 库位列表 单条
     * 
     * <p>根据 ID
     * 
     * @param id ID
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->
    <select id="getStocklocationInfoById" resultType="com.rongcheng.erp.entity.StocklocationInfo">
        
        select
            id,
            warehouse_id as warehouseId,
            user_stocklocation_code as userStocklocationCode,
            name,
            stocklocation_status as stocklocationStatus,
            connection_code as connectionCode,
            distribution_region as distributionRegion,
            note,
            owner_id as ownerId,
            operator_id as operatorId,
            is_authorized as authorized,
            gmt_create as gmtCreate,
            gmt_modified as gmtModified
        from
            stocklocation_info
        where
            id = #{0}
        and
            owner_id = #{1}
        
    </select>
    
    <!-- /**
     * 保存 仓库库位
     * @param stocklocationInfo 库位
     * @return
     * @author 赵滨
     */ -->
    <insert id="saveStocklocationInfoByCode" useGeneratedKeys="true" keyProperty="id" 
            parameterType="com.rongcheng.erp.entity.StocklocationInfo">
        insert into stocklocation_info(
	        id,
		    warehouse_id,
		    user_stocklocation_code,
		    name,
		    stocklocation_status,
		    connection_code,
		    distribution_region,
		    note,
		    owner_id,
		    operator_id,
		    is_authorized,
		    gmt_create,
		    gmt_modified)
		values(
		    #{id},
		    #{warehouseId},
		    #{userStocklocationCode},
		    #{name},
		    #{stocklocationStatus},
		    #{connectionCode},
		    #{distributionRegion},
		    #{note},
		    #{ownerId},
		    #{operatorId},
		    #{authorized},
		    #{gmtCreate},
		    #{gmtModified})
    </insert>
    
    <!-- /**
     * 修改 仓库库位
     * @param stocklocationInfo 库位
     * @return
     * @author 赵滨
     */ -->
    <update id="modifyStocklocationInfoByCode" 
            parameterType="com.rongcheng.erp.entity.StocklocationInfo">
        update
		    stocklocation_info
		set
		    <!-- id = #{id}, -->
		    warehouse_id = #{warehouseId},
		    user_stocklocation_code = #{userStocklocationCode},
		    name = #{name},
		    stocklocation_status = #{stocklocationStatus},
		    connection_code = #{connectionCode},
		    distribution_region = #{distributionRegion},
		    note = #{note},
		    <!-- owner_id = #{ownerId}, -->
		    operator_id = #{operatorId},
		    is_authorized = #{authorized},
		    <!-- gmt_create = #{gmtCreate}, -->
		    gmt_modified = #{gmtModified}
        where
            id = #{id}
        and 
            owner_id = #{ownerId} 
    </update>
    
    <!-- /**
     * 删除 仓库库位
     * @param id 栏目ID
     * @param ownerId 主账号ID
     * @return row 删除的行数
     * @author 赵滨
     */ -->
    <delete id="removeStocklocationInfoById">
        delete from 
            stocklocation_info
        where 
            id=#{0}
        and
            owner_id=#{1} 
    </delete>
    
    <!-- /**
     * 获取商品内容 根据 库位ID
     * @param locationId 库位ID
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */
    List<> (BigInteger locationId, BigInteger ownerId); -->
    <select id="listItemByLocationId" resultType="com.rongcheng.erp.entity.ItemCommonInfo">
        select 
		    i.id,
		    i.erp_item_num as erpItemNum,
		    i.name,
		    i.short_name as shortName,
		    i.platform_id as platformId,
		    i.platform_item_sku as platformItemSku,
		    i.user_shop_code as userShopCode,
		    i.user_item_code as userItemCode,
		    i.warehouse_id as warehouseId,
		    i.image1,
		    i.category,
		    i.brand,
		    i.series,
		    i.color,
		    i.size,
		    i.normal_price as normalPrice,
		    i.cost_price as costPrice,
		    i.promotion_price as promotionPrice,
		    i.bar_code as barCode,
		    i.package_condition as packageCondition,
		    i.user_classification as userClassification,
		    i.is_presell as presell,
		    i.is_commission_sell as commissionSell,
		    i.is_gift as gift,
		    i.bar_code_image as barCodeImage,
		    i.qr_code_image as qrCodeImage,
		    i.reserved1,
		    i.note,
		    i.is_authorized as authorized,
		    i.item_secret_key as itemSecretKey,
		    i.owner_id as ownerId,
		    i.shop_id as shopId,
		    i.gmt_create as gmtCreate,
		    i.gmt_modified as gmtModified,
		    i.operator_id as operatorId,
		    i.spec
		from 
	        stocklocation_info as s
		left join 
		    location_item_stock as l 
		on 
		    s.id = l.stocklocation_id
		join 
		    item_common_info as i
		on
		    l.item_id = i.id
		where 
	        s.id = #{0}
		and 
		    s.owner_id = #{1}
    </select>
    
    <!-- /**
     * 获取商品内容 根据 关键字
     * @param keywords 关键字
     * @param ownerId 主账号ID
     * @param start 开始
     * @param row 行数
     * @return
     * @author 赵滨
     */ -->
    <select id="listItemByKeywords" resultType="com.rongcheng.erp.entity.ItemCommonInfo">
        select
	        id,
	        erp_item_num as erpItemNum,
	        name,
	        short_name as shortName,
	        platform_id as platformId,
	        platform_item_sku as platformItemSku,
	        user_shop_code as userShopCode,
	        user_item_code as userItemCode,
	        warehouse_id as warehouseId,
	        image1,
	        category,
	        brand,
	        series,
	        color,
	        size,
	        normal_price as normalPrice,
	        cost_price as costPrice,
	        promotion_price as promotionPrice,
	        bar_code as barCode,
	        package_condition as packageCondition,
	        user_classification as userClassification,
	        is_presell as isPresell,
	        is_commission_sell as isCommissionSell,
	        is_gift as isGift,
	        bar_code_image as barCodeImage,
	        qr_code_image as qrCodeImage,
	        reserved1,
	        note,
	        is_authorized as isAuthorized,
	        item_secret_key as itemSecretKey,
	        owner_id as ownerId,
	        shop_id as shopId,
	        gmt_create as gmtCreate,
	        gmt_modified as gmtModified,
	        operator_id as operatorId,
	        spec
	    from
	        item_common_info
	    <where>
	       owner_id = #{1}
	       <if test="param1 != '' and param1 != null">
	       and 
	           (
	           erp_item_num like concat('%', #{0}, '%')
	       or 
	           name like concat('%', #{0}, '%')
	           )
	       </if>
	    </where>
	    limit
	       #{2}, #{3}
    </select>
    
    <!-- /**
     * 获取商品 条数 根据 关键字
     * @param keywords 关键字
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->
    <select id="countItemByKeywords" resultType="int">
        select
            count(id)
        from
            item_common_info
        <where>
           owner_id = #{1}
           <if test="param1 != '' and param1 != null">
           and 
               (
               erp_item_num like concat('%', #{0}, '%')
           or 
               name like concat('%', #{0}, '%')
               )
           </if>
        </where>
    </select>
    
    <!-- /**
     * 获取商品 内容  根据 商品ID数组
     * @param locationId 商品ID数组
     * @param ownerId   主账号ID
     * @return 
     * @author 赵滨
     */
    List<ItemCommonInfo> listItemByItemIds(Map<String, Object> params); -->
    <select id="listItemByItemIds" resultType="com.rongcheng.erp.entity.ItemCommonInfo">
        select
            id,
            erp_item_num as erpItemNum,
            name,
            short_name as shortName,
            platform_id as platformId,
            platform_item_sku as platformItemSku,
            user_shop_code as userShopCode,
            user_item_code as userItemCode,
            warehouse_id as warehouseId,
            image1,
            category,
            brand,
            series,
            color,
            size,
            normal_price as normalPrice,
            cost_price as costPrice,
            promotion_price as promotionPrice,
            bar_code as barCode,
            package_condition as packageCondition,
            user_classification as userClassification,
            is_presell as isPresell,
            is_commission_sell as isCommissionSell,
            is_gift as isGift,
            bar_code_image as barCodeImage,
            qr_code_image as qrCodeImage,
            reserved1,
            note,
            is_authorized as isAuthorized,
            item_secret_key as itemSecretKey,
            owner_id as ownerId,
            shop_id as shopId,
            gmt_create as gmtCreate,
            gmt_modified as gmtModified,
            operator_id as operatorId,
            spec
        from
            item_common_info
        <trim prefix="WHERE" prefixOverrides="AND"> 
            owner_id = #{ownerId}
            <if test="itemIds!=null and itemIds.length!=0">and id IN
                <foreach collection="itemIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim> 
    </select>

    <!--/**
    * 查询库存同步
    *
    * <p>根据关键字
    *
    * @param start 开始位置
    * @param row 查询几条
    * @param ownerId 主账号ID
    * @param keywords 关键字
    * @param autoSynchron 自动同步
    * @param defaultAll 是否默认全部选择
    * @return list 结果集合
    * @author 赵滨
    */-->
    <select id="listItemCommonSyncByKeywords"  resultType="java.util.Map">
        select
            *,
            (sumQuantity-useQuantity) as availableQuantity /*--可用量*/
        from(
            select
                /* 商品ID */
                i.id,
                /* 商品编码 */
                ifnull(i.erp_item_num, '') as erpItemNum,
                /* 商品名称 */
                ifnull(i.name, '') as name,
                /* 商品条码 */
                ifnull(i.bar_code, '') as barCode,
                /* 商品颜色 */
                ifnull(i.color, '') as color,
                /* 商品尺码 */
                ifnull(i.size, '') as size,
                /* 商品包装（是否破损，包装完整等） */
                ifnull(i.package_condition, '') as packageCondition,
                /* 库存总量 */
                ifnull(s.stock_quantity,0) as sumQuantity,
--                 s.stock_quantity as sumQuantity,
                /* 订单占用量 */
                ifnull(
                    (
                    select
                        sum(l.quantity)
                    from
                        order_item_link as l ,
                        item_common_info as it,
                        order_info as o
                    where
                        it.id = l.order_item_id
                        and
                        l.erp_order_id = o.id
                        and
                        l.order_item_id = i.id
                        and
                        o.order_status in (2, 3, 4, 5, 6)
                        and
                        l.owner_id = #{2}
                        and
                        it.owner_id = #{2}
                        and
                        o.owner_id = #{2}
                    ), 0) as useQuantity,
                /*库存自动同步状况（开关键）*/
                ifnull((select max(p.auto_synchron)
                from platform_erp_link as p
                where p.item_id = i.id
                and p.owner_id = #{2}
                and p.auto_synchron = 1),0) as autoSynchron
            from
                /*1.系统商品信息表1（高频使用表）item_common_info*/
                item_common_info as i
            left join
                /*20.erp专用-库位商品库存关联表*/
                location_item_stock as s
            on
                s.item_id = i.id
            <where>
                i.owner_id = #{2}
                and
                s.owner_id = #{2}
                <if test="param4 != '' and param4 != null">
                    and
                    (
                    i.erp_item_num like concat('%', #{3}, '%')
                    or
                    i.name like concat('%', #{3}, '%')
                    or
                    i.bar_code like concat('%', #{3}, '%')
                    )
                </if>
            </where>
            group by i.id
        ) as innerLayer
        <if test="param6 == false">
        where
            autoSynchron = #{4}
        </if>
        limit #{0}, #{1}
    </select>

    <!--/**
    * 查询库存同步 条数
    *
    * <p>根据关键字
    *
    * @param ownerId 主账号ID
    * @param keywords 关键字
    * @param autoSynchron 自动同步
    * @param defaultAll 是否默认全部选择
    * @return list 结果集合
    * @author 赵滨
    */-->
    <select id="countItemCommonSyncByKeywords"  resultType="int">
        select
            count(*)
        from(
            select
                /*库存自动同步状况（开关键）*/
                ifnull((select max(p.auto_synchron)
                from platform_erp_link as p
                where p.item_id = i.id
                and p.owner_id = #{0}
                and p.auto_synchron = 1),0) as autoSynchron
            from
                /*1.系统商品信息表1（高频使用表）item_common_info*/
                item_common_info as i
            left join
                /*20.erp专用-库位商品库存关联表*/
                location_item_stock as s
            on
                s.item_id = i.id
            <where>
                i.owner_id = #{0}
                and
                s.owner_id = #{0}
                <if test="param2 != '' and param2 != null">
                    and
                    (
                    i.erp_item_num like concat('%', #{1}, '%')
                    or
                    i.name like concat('%', #{1}, '%')
                    or
                    i.bar_code like concat('%', #{1}, '%')
                    )
                </if>
            </where>
            group by i.id
        ) as innerLayer
        <if test="param4 == false">
        where
            autoSynchron = #{2}
        </if>
    </select>

   <!-- /**
    * 查询系统商品对应关系关联表
    * @param itemId 商品ID
    * @param ownerId 主账号ID
    * @return
    * @author 赵滨
    */-->
    <select id="listPlatformErpLinkShopWarehouseInfo"
            resultType="com.rongcheng.erp.dto.PlatformErpLinkShopWarehouseInfo">
        select
            l.id,
            l.item_id as itemId,
            l.platform_id as platformId,
            l.shop_id as shopId,
            l.platform_item_sku as platformItemSku,
            l.warehouse_id as warehouseId,
            l.stocklocation_id as stocklocationId,
            l.auto_synchron as autoSynchron,
            l.auto_onsale as autoOnsale,
            l.synchron_exception as synchronException,
            l.available_stock as availableStock,
            l.allocation_ratio as allocationRatio,
            l.remnant_stock as remnantStock,
            l.reserved1,
            l.note,
            l.owner_id as ownerId,
            l.operator_id as operatorId,
            l.is_authorized as athorized,
            l.gmt_create as gmtCreate,
            l.gmt_modified as gmtModified,
            s.name as shopName,
            w.warehouse_name as warehouseName
        from
            platform_erp_link as l
        left join
            shop_info as s
        on
            l.shop_id = s.id
        left join
            warehouse_info as w
        on
            l.warehouse_id = w.id
        where
            l.owner_id = #{1}
        and
            s.owner_id = #{1}
        and
            w.owner_id = #{1}
        and
            l.item_id = #{0}
    </select>

    <!--/**
     * 更新系统商品对应关系关联表
     * @param platformErpLink 系统商品对应关系关联表
     * @return row 行数
     * @author 赵滨
     */-->
    <update id="updatePlatformErpLink" parameterType="com.rongcheng.erp.entity.PlatformErpLink" >
        update platform_erp_link
        <set >
            <if test="itemId != null" >
                item_id = #{itemId},
            </if>
            <if test="platformId != null" >
                platform_id = #{platformId},
            </if>
            <if test="shopId != null" >
                shop_id = #{shopId},
            </if>
            <if test="platformItemSku != null" >
                platform_item_sku = #{platformItemSku},
            </if>
            <if test="warehouseId != null" >
                warehouse_id = #{warehouseId},
            </if>
            <if test="stocklocationId != null" >
                stocklocation_id = #{stocklocationId},
            </if>
            <if test="autoSynchron != null" >
                auto_synchron = #{autoSynchron},
            </if>
            <if test="autoOnsale != null" >
                auto_onsale = #{autoOnsale},
            </if>
            <if test="synchronException != null" >
                synchron_exception = #{synchronException},
            </if>
            <if test="availableStock != null" >
                available_stock = #{availableStock},
            </if>
            <if test="allocationRatio != null" >
                allocation_ratio = #{allocationRatio},
            </if>
            <if test="remnantStock != null" >
                remnant_stock = #{remnantStock},
            </if>
            <if test="reserved1 != null" >
                reserved1 = #{reserved1},
            </if>
            <if test="note != null" >
                note = #{note},
            </if>
            <if test="operatorId != null" >
                operator_id = #{operatorId},
            </if>
            <if test="authorized != null" >
                is_authorized = #{authorized},
            </if>
            <if test="gmtCreate != null" >
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModified != null" >
                gmt_modified = #{gmtModified},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--/**
    * 查询 仓库
    * @param ownerId 主账号ID
    * @return
    * @author 赵滨
    */-->
    <select id="listWarehouseInfo"  resultType="com.rongcheng.erp.entity.WarehouseInfo">
        select
            id,
            user_warehouse_code as userWarehouseCode,
            warehouse_name as warehouseName,
            consignor_name as consignorName,
            consignor_tel as consignorTel,
            consignor_mobile as consignorMobile,
            region_id as regionId,
            user_address as userAddress,
            warehouse_status as warehouseStatus,
            connection_code as connectionCode,
            note,
            owner_id as ownerId,
            operator_id as operatorId,
            is_authorized as authorized,
            gmt_create as gmtCreate,
            gmt_modified as gmtModified
        from
            warehouse_info
        where
            owner_id = #{ownerId}
    </select>

    <!--/**
    * 查询 库位
    * @param ownerId 主账号ID
    * @return
    * @author 赵滨
    */-->
    <select id="listStocklocationInfo"  resultType="com.rongcheng.erp.entity.StocklocationInfo">
        select
            id,
            warehouse_id as warehouseId,
            user_stocklocation_code as userStocklocationCode,
            name,
            stocklocation_status as stocklocationStatus,
            connection_code as connectionCode,
            distribution_region as distributionRegion,
            note,
            owner_id as ownerId,
            operator_id as operatorId,
            is_authorized as authorized,
            gmt_create as gmtCreate,
            gmt_modified as gmtModified
        from
            stocklocation_info
        where
            owner_id = #{ownerId}
    </select>

    <!--/**
    * 查询 云仓商品配对
    * @param ownerId   主账号ID
    * @param keywords  关键字
    * @param warehouseId   仓库ID
    * @param stocklocationId   库位ID
    * @param start 开始
    * @param row   行数
    * @return listMap 云仓商品配对
    * @author 赵滨
    */-->
    <select id="listLocationItemStockAndItemByKeywords"  resultType="java.util.Map">
        SELECT
            <!--关联表ID-->
            l.id,
            <!--商品编码-->
            ifnull(i.erp_item_num, '') as erpItemNum,
            <!--商品名称-->
            ifnull(i.name, '') as name,
            <!--商品条码-->
            ifnull(i.bar_code, '') as barCode,
            <!--商品颜色-->
            ifnull(i.color, '') as color,
            <!--商品尺码-->
            ifnull(i.size, '') as size,
            <!--仓库-->
            ifnull(w.warehouse_name, '') as warehouseName,
            <!--库位-->
            ifnull(s.name, '') as stocklocationName,
            <!--库存总量-->
            ifnull(l.stock_quantity,0) as sumQuantity,
            <!--关联码-->
            ifnull(l.bind_id,0) as bindId
        FROM
            location_item_stock as l
            LEFT JOIN
            warehouse_info as w
            ON
            l.warehouse_id = w.id
            LEFT JOIN
            stocklocation_info as s
            ON
            l.stocklocation_id = s.id
            LEFT JOIN
            item_common_info as i
            ON
            l.item_id = i.id
        WHERE
        l.owner_id = #{0}
        AND l.bind_id IN
        (
            SELECT bind_id FROM
            (
                SELECT lson.bind_id FROM location_item_stock as lson, item_common_info as ison
                WHERE lson.owner_id = #{0}
                AND lson.bind_id IS NOT NULL
                AND lson.bind_id != ""
                AND lson.item_id = ison.id
                <if test="param2 != '' and param2 != null">
                AND
                    (
                    ison.erp_item_num like concat('%', #{1}, '%')
                    or
                    ison.name like concat('%',#{1}, '%')
                    or
                    ison.bar_code like concat('%',#{1}, '%')
                    )
                </if>

                <if test="param3 != '' and param3 != null">
                AND lson.warehouse_id = #{2}
                </if>

                <if test="param4 != '' and param4 != null">
                AND lson.stocklocation_id = #{3}
                </if>

                GROUP BY lson.bind_id
                ORDER BY lson.id
                LIMIT #{4},#{5}
            ) as tableson
        )
        ORDER BY l.bind_id
    </select>

    <!--/**
    * 查询 云仓商品配对 条数
    * @param ownerId   主账号ID
    * @param keywords  关键字
    * @param warehouseId   仓库ID
    * @param stocklocationId   库位ID
    * @return row 条数
    * @author 赵滨
    */-->
    <select id="countLocationItemStockAndItemByKeywords"  resultType="int">
        SELECT count(*) FROM
        (
        SELECT lson.bind_id FROM location_item_stock as lson, item_common_info as ison
        WHERE lson.owner_id = #{0}
        AND lson.bind_id IS NOT NULL
        AND lson.bind_id != ""
        AND lson.item_id = ison.id
        <if test="param2 != '' and param2 != null">
            AND
            (
            ison.erp_item_num like concat('%', #{1}, '%')
            or
            ison.name like concat('%',#{1}, '%')
            or
            ison.bar_code like concat('%',#{1}, '%')
            )
        </if>

        <if test="param3 != '' and param3 != null">
            AND lson.warehouse_id = #{2}
        </if>

        <if test="param4 != '' and param4 != null">
            AND lson.stocklocation_id = #{3}
        </if>

        GROUP BY lson.bind_id
        ORDER BY lson.id
        ) as row
    </select>

    <!--/**
     * 把关联ID设置为null
     * @param locationItemStockId 关联关系ID
     * @param ownerId   主账号ID
     * @param time   当前时间
     * @return row 条数
     * @author 赵滨
     */-->
    <update id="updateLocationItemStockOfBindIdSetNull"
            parameterType="com.rongcheng.erp.entity.LocationItemStock">
        update
            location_item_stock
        set
            bind_id = NULL ,
            gmt_modified = #{gmtModified}
        where
            id = #{id}
        and
            owner_id = #{ownerId}
    </update>

    <!--/**
    * 查询 云仓商品关联 弹出框
    * @param ownerId   主账号ID
    * @param keywords  关键字
    * @param warehouseId   仓库ID
    * @param stocklocationId   库位ID
    * @param start 开始
    * @param row   行数
    * @return listMap 云仓商品配对
    * @author 赵滨
    */-->
    <select id="listLocationItemStockAndItemByKeywordsOfAlert"  resultType="java.util.Map">
        SELECT
        <!--关联表ID-->
        l.id,
        <!--商品编码-->
        ifnull(i.erp_item_num, '') as erpItemNum,
        <!--商品名称-->
        ifnull(i.name, '') as name,
        <!--商品条码-->
        ifnull(i.bar_code, '') as barCode,
        <!--商品颜色-->
        ifnull(i.color, '') as color,
        <!--商品尺码-->
        ifnull(i.size, '') as size,
        <!--仓库-->
        ifnull(w.warehouse_name, '') as warehouseName,
        <!--库位-->
        ifnull(s.name, '') as stocklocationName,
        <!--库存总量-->
        ifnull(l.stock_quantity,0) as sumQuantity,
        <!--关联码-->
        ifnull(l.bind_id,0) as bindId
        FROM
        location_item_stock as l
        LEFT JOIN
        warehouse_info as w
        ON
        l.warehouse_id = w.id
        LEFT JOIN
        stocklocation_info as s
        ON
        l.stocklocation_id = s.id
        LEFT JOIN
        item_common_info as i
        ON
        l.item_id = i.id
        WHERE
        l.owner_id = #{0}

        <if test="param2 != '' and param2 != null">
            AND
            (
            i.erp_item_num like concat('%', #{1}, '%')
            or
            i.name like concat('%',#{1}, '%')
            or
            i.bar_code like concat('%',#{1}, '%')
            )
        </if>

        <if test="param3 != '' and param3 != null">
            AND l.warehouse_id = #{2}
        </if>

        <if test="param4 != '' and param4 != null">
            AND l.stocklocation_id = #{3}
        </if>

        ORDER BY l.id
        LIMIT #{4},#{5}

    </select>

    <!--/**
    * 查询 云仓商品关联 弹出框 条数
    * @param ownerId   主账号ID
    * @param keywords  关键字
    * @param warehouseId   仓库ID
    * @param stocklocationId   库位ID
    * @return row 条数
    * @author 赵滨
    */-->
    <select id="countLocationItemStockAndItemByKeywordsOfAlert"  resultType="int">
        SELECT  count(*)
        FROM
        location_item_stock as l
        LEFT JOIN
        item_common_info as i
        ON
        l.item_id = i.id
        WHERE
        l.owner_id = #{0}

        <if test="param2 != '' and param2 != null">
            AND
            (
            i.erp_item_num like concat('%', #{1}, '%')
            or
            i.name like concat('%',#{1}, '%')
            or
            i.bar_code like concat('%',#{1}, '%')
            )
        </if>

        <if test="param3 != '' and param3 != null">
            AND l.warehouse_id = #{2}
        </if>

        <if test="param4 != '' and param4 != null">
            AND l.stocklocation_id = #{3}
        </if>
    </select>

    <!-- /**
     * 查询 云仓商品关联关系
     *
     * <p>根据 ID 查询
     *
     * @param locationItemStockId ID
     * @param ownerId 主账号ID
     * @return
     * @author 赵滨
     */ -->
    <select id="getLocationItemStockByLocationItemStockId"
            resultType="com.rongcheng.erp.entity.LocationItemStock">
        select
            id,
		    warehouse_id as warehouseId,
		    stocklocation_id as stocklocationId,
		    item_id as itemId,
		    stock_quantity as stockQuantity,
		    alert_stock as alertStock,
		    sendout_status as sendoutStatus,
        	bind_id as bindId,
		    reserved1,
		    note,
		    owner_id as ownerId,
		    operator_id as operatorId,
		    is_authorization as authorization,
		    gmt_create as gmtCreate,
		    gmt_modified as gmtModified
        from
            location_item_stock
        where
            owner_id = #{1}
        and
            id = #{0}
    </select>

    <!--/**
     * 更新 库位商品库存关联表
     * @param locationItemStock 库位商品库存关联
     * @return row 条数
     * @author 赵滨
     */-->
    <update id="updateLocationItemStock"
            parameterType="com.rongcheng.erp.entity.LocationItemStock">
        update
            location_item_stock
        <set>
            <if test="warehouseId != null" >
                warehouse_id = #{warehouseId},
            </if>
            <if test="stocklocationId != null" >
                stocklocation_id = #{stocklocationId},
            </if>
            <if test="itemId != null" >
                item_id = #{itemId},
            </if>
            <if test="stockQuantity != null" >
                stock_quantity = #{stockQuantity},
            </if>
            <if test="alertStock != null" >
                alert_stock = #{alertStock},
            </if>
            <if test="sendoutStatus != null" >
                sendout_status = #{sendoutStatus},
            </if>
            <if test="bindId != null" >
                bind_id = #{bindId},
            </if>
            <if test="reserved1 != null" >
                reserved1 = #{reserved1},
            </if>
            <if test="note != null" >
                note = #{note},
            </if>
            <if test="operatorId != null" >
                operator_id = #{operatorId},
            </if>
            <if test="authorization != null" >
                is_authorization = #{authorization},
            </if>
            <if test="gmtModified != null" >
                gmt_modified = #{gmtModified}
            </if>
        </set>
        where
            id = #{id}
        AND
            owner_id = #{ownerId}
    </update>

</mapper>



